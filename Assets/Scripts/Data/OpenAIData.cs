using Newtonsoft.Json;
using System.Collections.Generic;
using UnityEngine;

// Represents a message in the chat conversation
[System.Serializable]
public class Message
{
    public string role; // Role of the message sender, can be 'system', 'user' or 'assistant'
    public string content; // The text of the message
}

// Represents a prompt completion request for the OpenAI API
[System.Serializable]
public class RequestData
{
    public string model; // The language model to use
    public string prompt; // The prompt to complete
    public float temperature; // Controls randomness of output. Higher value = more random, lower value = more deterministic
    public int max_tokens; // The maximum length of the generated output
    public int top_p; // Controls diversity via nucleus sampling: lower values make the output more focused, higher values make it more diverse
    public int frequency_penalty; // Controls penalty for using frequent tokens
    public int presence_penalty; // Controls penalty for using new tokens
}

// Represents a chat completion request for the OpenAI API
[System.Serializable]
public class RequestDataChat
{
    public string model; // The language model to use
    public Message[] messages; // An array of messages in the conversation
    public float temperature; // Controls randomness of output
    public int max_tokens; // The maximum length of the generated output
    public float top_p; // Controls diversity via nucleus sampling
    public float frequency_penalty; // Controls penalty for using frequent tokens
    public float presence_penalty; // Controls penalty for using new tokens
}

// Represents a response from the OpenAI API
[System.Serializable]
public class APIResponse
{
    public string id; // ID of the completion
    [SerializeField]
    [JsonProperty("object")]
    private string obj; // Type of the API object
    public int created; // Timestamp when the object was created
    public string model; // The language model used
    public List<Choice> choices; // List of message choices generated by the assistant

    // Property getter and setter for the object
    public string Object
    {
        get { return obj; }
        set { obj = value; }
    }
}

// Represents a response message from the assistant
[System.Serializable]
public class MessageResponse
{
    public string role; // Role of the message sender, can be 'system', 'user' or 'assistant'
    public string content; // The text of the message
}

// Represents a choice in the list of choices in the response
[System.Serializable]
public class Choice
{
    public MessageResponse message; // The message of the choice
}

// Represents a choice in the list of choices in the response (OLD version)
[System.Serializable]
public class ChoiceOLD
{
    public string text; // The text of the choice
    public int index; // Index of the token where this choice begins
    public object logprobs; // Log-probabilities of tokens according to the model
    public string finish_reason; // The reason the language model stopped generating further tokens
}
